{"version":3,"sources":["components/Cards/Cards.module.css","components/Spinner/Spinner.js","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Spinner/Spinner.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Spinner","className","styles","loader","Cards","data","confirmed","recovered","deaths","lastUpdate","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","footer","icon","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84f13796.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__17hBq\",\"card\":\"Cards_card__G2b0h\",\"infected\":\"Cards_infected__21YG8\",\"recovered\":\"Cards_recovered__1tlYd\",\"deaths\":\"Cards_deaths__vYgSh\"};","import React from 'react'\r\n\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className={styles.loader}>\r\n\t\t\tWait for a moment...\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\tif (!confirmed) {\r\n\t\treturn <Spinner />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp \r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp \r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp \r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths from Covid-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cards","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n\t\tconst modifiedData = {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate,\r\n\t\t}\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\t\t\r\n\t\tconst modifiedData = data.map(dailyData => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {data: {countries}} = await axios.get(`${url}/countries`);\r\n\t\t\r\n\t\treturn countries.map(country => country.name);\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data : {confirmed, recovered, deaths}, country }) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\t\t\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = (\r\n\t\tdailyData.length ? \r\n\t\t\t(<Line \r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'Recovered',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t}],\r\n\t\t\t\t}}\r\n\t\t\t/>) : null\r\n\t);\r\n\r\n\tconst barChart = (\r\n\t\tconfirmed ? (\r\n\t\t\t<Bar \r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t'rgba(0,0,255,0.5)',\r\n\t\t\t\t\t\t\t'rgba(0,255,0,0.5)',\r\n\t\t\t\t\t\t\t'rgba(255,0,0,0.5)'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value]\r\n\t\t\t\t\t}]\r\n\t\t\t\t}}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tlegend: {display: false},\r\n\t\t\t\t\ttitle: {display: true, text: `Current state in ${country}`}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t) : null\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react'\r\n\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t},[]);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default CountryPicker","import React, { Component } from 'react';\nimport styles from './App.module.css';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport { fetchData } from './api'; \nimport coronaImage from './images/image.png';\n\nclass App extends Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: '',\n\t} \n\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\t\tthis.setState({\n\t\t\tdata: fetchedData\n\t\t});\n\t}\n\n\thandleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country); \n\t\t\n\t\tthis.setState({\n\t\t\tdata: fetchedData,\n\t\t\tcountry: country\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t    <div className={styles.container}>\n\t\t    \t<img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n\t\t    \t<Cards data={data} />\n\t\t    \t<CountryPicker handleCountryChange={this.handleCountryChange}/>\n\t\t    \t<Chart data={data} country={country}/> \n\t\t    </div>\n\t\t    <div className={styles.footer}>Built with <span className={styles.icon}>&hearts;</span> by Prateek Rawat</div>\n\t\t    </>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1qrQB\",\"image\":\"App_image__2XQJc\",\"icon\":\"App_icon__2DdTW\",\"footer\":\"App_footer__1JkB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3AphN\",\"load1\":\"Spinner_load1__5Dhx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__WlFZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3YOUZ\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}